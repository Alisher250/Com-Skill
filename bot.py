from aiogram import types
from dispatcher import dp
from main import BotDB
import psycopg2

# –æ—Ç–∫–ª–∏–∫ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message_handler(commands="start")
async def start(message: types.Message):

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    if not BotDB.user_exists(message.from_user.id):
        BotDB.add_user(message.from_user.id, str(message.from_user.full_name), "@" + str(message.from_user.username))

    if BotDB.user_exists(message.from_user.id):
        BotDB.update_user(message.from_user.id, str(message.from_user.full_name), "@" + str(message.from_user.username))

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ Inline
    markup = types.InlineKeyboardMarkup()
    school_subjects = types.InlineKeyboardButton(text="üéí –®–∫–æ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã", callback_data="school_skill")
    professional_skills = types.InlineKeyboardButton(text="üë®‚Äçüè´–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏", callback_data="profi_skill")
    markup.add(school_subjects, professional_skills)

    await message.bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç <b>{message.from_user.first_name}!</b> –ß—Ç–æ —Ö–æ—á–µ—à—å –∏–∑—É—á–∏—Ç—å? <b>–®–∫–æ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã</b>, –∏–ª–∏ <b>–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏</b>? (–ö—Å—Ç–∞—Ç–∏, –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —É —Ç–µ–±—è –±—ã–ª <b>@username</b>)",
                                   parse_mode='html', reply_markup=markup)

# –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
@dp.message_handler()
async def skills(message: types.Message):


    # –¶–∏–∫–ª –¥–ª—è –Ω–∞–≤—ã–∫–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø–æ–¥—Ç—è–Ω—É—Ç—å
    for x in range(BotDB.get_count_school_skills()):

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∞—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —à–∫–æ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        if message.text == str(BotDB.get_title_school_skills()[x]).replace("'","",2).replace("(","").replace(")","").replace(",",""):

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–∑–ª–∏—á–∏–µ –Ω–∞–≤—ã–∫–∞ –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –∫–æ—Ç–æ—Ä—ã–π –æ–Ω —Ö–æ—á–µ—Ç –ø–æ—Ç–¥—è–Ω—É—Ç—å
            if not message.text == str(BotDB.get_know_skill_user(message.from_user.id)[0]).replace("'","",2).replace("(","").replace(")","").replace(",",""):

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î
                BotDB.add_user_wknow_skill(str(BotDB.get_title_school_skills()[x]).replace("'","",2).replace("(","").replace(")","").replace(",",""), message.from_user.id)

            else:

                await message.bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–≤—ã–∫ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è, –æ—Ç–ª–∏—á–∞—é—â–∏–π—Å—è –æ—Ç –Ω–∞–≤—ã–∫–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∑–Ω–∞–µ—Ç–µ! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –∑–∞–Ω–æ–≤–æ /start")
                break


            # –°–æ–æ–±—â–µ–Ω–∏—è...
            await message.bot.send_message(message.from_user.id, "–ö—Ä—É—Ç–æ! –ú—ã –ø–æ–¥–æ–±—Ä–∞–ª–∏ –¥–ª—è —Ç–µ–±—è <b>–ª—É—á—à–∏—Ö –ª—é–¥–µ–π</b> –≤ —Å–≤–æ–µ–π —Å—Ñ–µ—Ä–µ, –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –∏–º!", reply_markup=None, parse_mode="html")
            await message.bot.send_message(message.from_user.id, "<b>–ü–æ–∏—Å–∫...</b>", parse_mode="html")

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–∫–∏–ª–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
            user = BotDB.get_skills_user(message.from_user.id)[0]

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥—Ö–æ–¥—è—à–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö(—Ç–æ –µ—Å—Ç—å, —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –Ω–∞–≤—ã–∫ –Ω—É–∂–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≤—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
            if BotDB.get_need_user(user[1], user[0]):

                # –¶–∏–∫–ª –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–∫–∏–¥—ã–≤–∞–Ω–∏–µ –∏—Ö –≤ —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                for x in range(BotDB.get_count_need_user(user[1],user[0])):

                    await message.bot.send_message(message.from_user.id, str(x + 1) + ". " + str(BotDB.get_need_user(user[1], user[0])[x]).replace("'", "", 4).replace("(", "").replace(")","").replace(",", ""))
            else:

                await message.bot.send_message(message.from_user.id, ":( –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞—à–ª–æ—Å—å!")

            await message.bot.send_message(message.from_user.id, "–¢–µ–ø–µ—Ä—å –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É - <b>/start</b>", parse_mode="html")


    for x in range(BotDB.get_count_profi_skills()):

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∞—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —à–∫–æ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        if message.text == str(BotDB.get_title_profi_skills()[x]).replace("'","",2).replace("(","").replace(")","").replace(",",""):

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–∑–ª–∏—á–∏–µ –Ω–∞–≤—ã–∫–∞ –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –∫–æ—Ç–æ—Ä—ã–π –æ–Ω —Ö–æ—á–µ—Ç –ø–æ—Ç–¥—è–Ω—É—Ç—å
            if not message.text == str(BotDB.get_know_skill_user(message.from_user.id)[0]).replace("'","",2).replace("(","").replace(")","").replace(",",""):

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î
                BotDB.add_user_wknow_skill(str(BotDB.get_title_profi_skills()[x]).replace("'","",2).replace("(","").replace(")","").replace(",",""), message.from_user.id)
            else:

                await message.bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–≤—ã–∫ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è, –æ—Ç–ª–∏—á–∞—é—â–∏–π—Å—è –æ—Ç –Ω–∞–≤—ã–∫–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∑–Ω–∞–µ—Ç–µ! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –∑–∞–Ω–æ–≤–æ /start")
                break

            # –°–æ–æ–±—â–µ–Ω–∏—è...
            await message.bot.send_message(message.from_user.id, "–ö—Ä—É—Ç–æ! –ú—ã –ø–æ–¥–æ–±—Ä–∞–ª–∏ –¥–ª—è —Ç–µ–±—è <b>–ª—É—á—à–∏—Ö –ª—é–¥–µ–π</b> –≤ —Å–≤–æ–µ–π —Å—Ñ–µ—Ä–µ, –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –∏–º!", reply_markup=None, parse_mode="html")
            await message.bot.send_message(message.from_user.id, "<b>–ü–æ–∏—Å–∫...</b>", parse_mode="html")

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–∫–∏–ª–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
            user = BotDB.get_skills_user(message.from_user.id)[0]

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥—Ö–æ–¥—è—à–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö(—Ç–æ –µ—Å—Ç—å, —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –Ω–∞–≤—ã–∫ –Ω—É–∂–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≤—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
            if BotDB.get_need_user(user[1], user[0]):

                # –¶–∏–∫–ª –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–∫–∏–¥—ã–≤–∞–Ω–∏–µ –∏—Ö –≤ —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                for x in range(BotDB.get_count_need_user(user[1],user[0])):

                    await message.bot.send_message(message.from_user.id, str(x+1) + ". " + str(BotDB.get_need_user(user[1], user[0])[x]).replace("'","",4).replace("(","").replace(")","").replace(",",""))
            else:

                await message.bot.send_message(message.from_user.id, ":( –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞—à–ª–æ—Å—å!")

            await message.bot.send_message(message.from_user.id, "–¢–µ–ø–µ—Ä—å –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É - <b>/start</b>", parse_mode="html")



# callback —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è Inline –∫–Ω–æ–ø–æ–∫ –∏ –¥–ª—è —Ü–∏–∫–ª–∞ —Å–ª–µ–¥—É—é—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã - ReplyButtons
@dp.callback_query_handler()
async def process_callback_button1(call: types.CallbackQuery):

    # callback —à—Ç—É–∫–∏
    callback = call.data

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —à–∫–æ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤

    if callback == "school_skill":

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        markup = types.InlineKeyboardMarkup(row_width=2)

        # –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        await call.message.bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                                 text=f"–ü—Ä–∏–≤–µ—Ç <b>{call.from_user.first_name}!</b> –ß—Ç–æ —Ö–æ—á–µ—à—å –∏–∑—É—á–∏—Ç—å? <b>–®–∫–æ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã</b>, –∏–ª–∏ <b>–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏</b>?",
                                                 parse_mode="html",
                                                 reply_markup=None)

        # –¶–∏–∫–ª –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        for x in range(BotDB.get_count_school_skills()):
            markup = markup.add(types.InlineKeyboardButton(
                str(BotDB.get_title_school_skills()[x]).replace("'", "", 2).replace("(", "").replace(")", "").replace(",", ""),
                callback_data=str(BotDB.get_title_school_skills()[x]).replace("'", "", 2).replace("(", "").replace(")","").replace(",", "")))

        await call.bot.send_message(call.from_user.id, "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —Ä–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è!",reply_markup=markup)

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤

    if callback == "profi_skill":

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        markup = types.InlineKeyboardMarkup(row_width=2)

        # –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        await call.message.bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                                 text=f"–ü—Ä–∏–≤–µ—Ç <b>{call.from_user.first_name}!</b> –ß—Ç–æ —Ö–æ—á–µ—à—å –∏–∑—É—á–∏—Ç—å? <b>–®–∫–æ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã</b>, –∏–ª–∏ <b>–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏</b>?",
                                                 parse_mode="html",
                                                 reply_markup=None)

        # –¶–∏–∫–ª –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        for x in range(BotDB.get_count_profi_skills()):
            markup = markup.add(types.InlineKeyboardButton(
                str(BotDB.get_title_profi_skills()[x]).replace("'", "", 2).replace("(", "").replace(")", "").replace(",", ""),
                callback_data=str(BotDB.get_title_profi_skills()[x]).replace("'", "", 2).replace("(", "").replace(")","").replace(",", "")))

        await call.bot.send_message(call.from_user.id, "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —Ä–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è!",
                                       reply_markup=markup)

    for x in range(BotDB.get_count_school_skills()):
        if callback == str(BotDB.get_title_school_skills()[x]).replace("'", "", 2).replace("(", "").replace(")", "").replace(",", ""):

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î
            BotDB.add_user_know_skill(callback, call.from_user.id)

            # –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
            await call.message.bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                                     text="–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —Ä–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è!",
                                                     reply_markup=None)

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

            # –¶–∏–∫–ª –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            for x in range(BotDB.get_count_school_skills()):

                if callback == str(BotDB.get_title_school_skills()[x]).replace("'", "", 2).replace("(", "").replace(")","").replace(",", ""):

                    for x in range(BotDB.get_count_school_skills()):
                        x = types.KeyboardButton(str(BotDB.get_title_school_skills()[x])
                                                 .replace("'", "", 2).replace("(", "").replace(")", "").replace(",", ""))
                        markup.insert(x)

            # –¶–∏–∫–ª –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            for x in range(BotDB.get_count_profi_skills()):

                if callback == str(BotDB.get_title_profi_skills()[x]).replace("'", "", 2).replace("(", "").replace(")","").replace(",", ""):

                    for x in range(BotDB.get_count_profi_skills()):
                        x = types.KeyboardButton(str(BotDB.get_title_profi_skills()[x]).replace("'", "", 2).replace("(", "").replace(")", "").replace(",", ""))
                        markup.insert(x)

            await call.message.bot.send_message(call.message.chat.id,
                                                "–ê —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–æ–¥—Ç—è–Ω—É—Ç—å",
                                                reply_markup=markup)

    for x in range(BotDB.get_count_profi_skills()):
            if callback == str(BotDB.get_title_profi_skills()[x]).replace("'", "", 2).replace("(", "").replace(")", "").replace(",", ""):

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î
                BotDB.add_user_know_skill(callback, call.from_user.id)

                # –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
                await call.message.bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                                         text="–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —Ä–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è!",
                                                         reply_markup=None)

                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

                # –¶–∏–∫–ª –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
                for x in range(BotDB.get_count_school_skills()):

                    if callback == str(BotDB.get_title_school_skills()[x]).replace("'", "", 2).replace("(", "").replace(")","").replace(",", ""):

                        for x in range(BotDB.get_count_school_skills()):
                            x = types.KeyboardButton(str(BotDB.get_title_school_skills()[x])
                                                     .replace("'", "", 2).replace("(", "").replace(")", "").replace(",", ""))
                            markup.insert(x)

                # –¶–∏–∫–ª –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
                for x in range(BotDB.get_count_profi_skills()):

                    if callback == str(BotDB.get_title_profi_skills()[x]).replace("'", "", 2).replace("(", "").replace(")","").replace(",", ""):

                        for x in range(BotDB.get_count_profi_skills()):
                            x = types.KeyboardButton(str(BotDB.get_title_profi_skills()[x]).replace("'", "", 2).replace("(", "").replace(")", "").replace(",", ""))
                            markup.insert(x)

                await call.message.bot.send_message(call.message.chat.id,
                                                    "–°–ø–∞—Å–∏–±–æ! –ê —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–æ–¥—Ç—è–Ω—É—Ç—å",
                                                    reply_markup=markup)



"""# –æ—Ç–∫–ª–∏–∫ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /restart
@dp.message_handler(commands="restart")
async def start(message: types.Message):

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    school_subjects = types.KeyboardButton("üéí –®–∫–æ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã")
    professional_skills = types.KeyboardButton("–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏")
    markup.add(school_subjects, professional_skills)

    await message.bot.send_message.

    await message.bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç <b>{message.from_user.first_name}!</b> –ß—Ç–æ —Ö–æ—á–µ—à—å –∏–∑—É—á–∏—Ç—å? <b>–®–∫–æ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã</b>, –∏–ª–∏ <b>–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏</b>?", parse_mode='html', reply_markup=markup)
"""

"""    if not BotDB.get_know_skill_user(message.from_user.id) == BotDB.get_title_school_skills() or BotDB.get_title_profi_skills():
        BotDB.update_null_know_skill_user(message.from_user.id)

    if not BotDB.get_wknow_skill_user(message.from_user.id) == BotDB.get_title_school_skills() or BotDB.get_title_profi_skills():
   
        BotDB.update_null_wknow_skill_user(message.from_user.id)
"""
"""
user = BotDB.get_skills_user(message.from_user.id)[0]

for x in range(BotDB.get_count_profi_skills()):

    if not user[1] == str(BotDB.get_title_school_skills()[x]).replace("'", "", 2).replace("(", "").replace(")",
                                                                                                           "").replace(
            ",", ""):
        BotDB.update_null_wknow_skill_user(BotDB.get_user_id(message.from_user.id))

    if not user[0] == str(BotDB.get_title_profi_skills()[x]).replace("'", "", 2).replace("(", "").replace(")",
                                                                                                          "").replace(
            ",", ""):
        BotDB.update_null_know_skill_user(BotDB.get_user_id(message.from_user.id))

for x in range(BotDB.get_count_school_skills()):

    print(user[1])
    print(
        str(BotDB.get_title_school_skills()[x]).replace("'", "", 2).replace("(", "").replace(")", "").replace(",", ""))

    if not user[0] == str(BotDB.get_title_school_skills()[x]).replace("'", "", 2).replace("(", "").replace(")",
                                                                                                           "").replace(
            ",", ""):
        BotDB.update_null_know_skill_user(BotDB.get_user_id(message.from_user.id))

    if not user[1] == str(BotDB.get_title_profi_skills()[x]).replace("'", "", 2).replace("(", "").replace(")",
                                                                                                          "").replace(
            ",", ""):
        BotDB.update_null_wknow_skill_user(BotDB.get_user_id(message.from_user.id))"""